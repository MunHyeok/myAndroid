apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.example.chk.countinglogix"
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "CountingLogix"
        }
    }

    buildTypes {
        debug {
            jniDebuggable  = true
        }
        release {
            minifyEnabled false
            jniDebuggable  = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.ndkFolder
        commandLine "$ndkDir/ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.ndkFolder
        commandLine "$ndkDir/ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile 'com.github.chrisbanes.photoview:library:1.2.3'
    compile project(':openCVLibrary300')
}
